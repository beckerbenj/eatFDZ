[{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"loading-the-data","dir":"Articles","previous_headings":"","what":"Loading the data","title":"FDZ Data Cleaning","text":"data set loaded via import_spss() command. data set contains 14 variables 10 observations, including demographic variables age sex students, family situation selected grades. Note data set imported GADSdat object. detailed explanations corresponding object structure technical details, refer readers eatGADS documentation.","code":"dat <- import_spss(sav_path) str(dat$dat) # for a small overview in the variables of the data set ## 'data.frame':    10 obs. of  14 variables: ##  $ ID        : chr  \"BY1342\" \"RP7763\" \"ST1213\" \"NW5763\" ... ##  $ ID_name   : chr  \"Finn\" \"Lukas\" \"Malia\" \"Lennard\" ... ##  $ info      : chr  \"Father Markus helps with homework\" \"family always goes to Cortina ice cream parlor after school\" \"-97\" \"big sister is student representative\" ... ##  $ sex       : num  1 1 2 1 2 1 1 2 2 1 ##  $ subjfav   : chr  \"Math\" \"Physical Education\" \"Chemistry\" \"Art\" ... ##  $ age       : num  14 15 14 14 13 15 14 17 14 13 ##  $ siblings  : num  -9 0 2 1 35 0 1 0 3 1 ##  $ home      : num  1 1 1 1 2 2 1 1 2 -98 ##  $ birth     : chr  \"01/11/2009\" \"05/23/2007\" \"08/31/2008\" \"12/07/2008\" ... ##  $ books     : num  6 4 -99 1 NA 2 3 2 4 5 ##  $ school    : num  4 -99 -98 3 -99 2 3 -97 4 4 ##  $ grade_math: num  1 3 4 2 6 2 3 5 4 1 ##  $ grade_germ: num  2 3 2 6 5 4 2 1 1 2 ##  $ grade_eng : num  3 4 1 3 2 3 5 2 1 6"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"removing-all-non-ascii-characters","dir":"Articles","previous_headings":"","what":"Removing all non-ASCII characters","title":"FDZ Data Cleaning","text":"Non-ASCII characters frequently lead issues depending operating system statistical software used. data contains non-ASCII characters, might cause compatibility issues errors processing data. fixEncoding() removes non-ASCII characters character vector GADSdat object. non-ASCII character ID name changed ae.","code":"dat$dat$ID_name ##  [1] \"Finn\"    \"Lukas\"   \"Malia\"   \"Lennard\" \"Änne\"    \"Gerrit\"  \"Emil\"    ##  [8] \"Mila\"    \"Clara\"   \"Malek\" dat <- fixEncoding(dat, input = \"other\") dat$dat$ID_name ##  [1] \"Finn\"    \"Lukas\"   \"Malia\"   \"Lennard\" \"Aenne\"   \"Gerrit\"  \"Emil\"    ##  [8] \"Mila\"    \"Clara\"   \"Malek\""},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"define-missings-semi-automatically","dir":"Articles","previous_headings":"","what":"Define missings semi-automatically","title":"FDZ Data Cleaning","text":"crucial meta data property SPSS data missing tags. Sometimes missing values correctly tagged missing. Via eatGADS, missing tags can corrected semi-automatically. can either done based wordings existing value labels (checkMissings()) based value range existing value labels (checkMissingsByValues()). checkMissings() tests whether set specified regular expressions occurs value labels compares corresponding missings tags. instance variable books contains value label omitted, tagged missing. checkMissings() now automatically tagged value -99 label omitted missing (miss). checkMissingsByValues() checks whether value labels exist specified range numeric values whether missing tags provided accordingly: previous function already tagged two missings correctly, value label -98 value label unclear answer used. Now, contained specified range therefore tagged missing.","code":"extractMeta(dat, vars = c(\"books\")) # usually, we wouldn't know yet that this variable contains these value labels. This is for demonstration purposes to see the before and after effect of the function ##    varName                varLabel format display_width labeled value ## 12   books Number of books at home  F10.0            NA     yes   -99 ## 13   books Number of books at home  F10.0            NA     yes     1 ## 14   books Number of books at home  F10.0            NA     yes     2 ## 15   books Number of books at home  F10.0            NA     yes     3 ## 16   books Number of books at home  F10.0            NA     yes     4 ## 17   books Number of books at home  F10.0            NA     yes     5 ## 18   books Number of books at home  F10.0            NA     yes     6 ##               valLabel missings ## 12             omitted    valid ## 13          0-10 books    valid ## 14         11-25 books    valid ## 15        26-100 books    valid ## 16       101-200 books    valid ## 17                        valid ## 18 more than 500 books    valid missinglabels <- paste(\"missing\", \"unknown\",                        \"omitted\",                        sep = \"|\") dat1 <- checkMissings(dat, missingLabel = missinglabels) ## The following variables have value labels including the term 'missing|unknown|omitted' which are not coded as missing: ## books, school ## 'miss' is inserted into column missings for 3 rows. extractMeta(dat1, vars = c(\"books\")) ##    varName                varLabel format display_width labeled value ## 12   books Number of books at home  F10.0            NA     yes   -99 ## 13   books Number of books at home  F10.0            NA     yes     1 ## 14   books Number of books at home  F10.0            NA     yes     2 ## 15   books Number of books at home  F10.0            NA     yes     3 ## 16   books Number of books at home  F10.0            NA     yes     4 ## 17   books Number of books at home  F10.0            NA     yes     5 ## 18   books Number of books at home  F10.0            NA     yes     6 ##               valLabel missings ## 12             omitted     miss ## 13          0-10 books    valid ## 14         11-25 books    valid ## 15        26-100 books    valid ## 16       101-200 books    valid ## 17                        valid ## 18 more than 500 books    valid extractMeta(dat1, vars = c(\"school\")) # usually, we wouldn't know yet that this variable contains these value labels. This is for demonstration purposes to see the before and after effect of the function ##    varName varLabel format display_width labeled value                 valLabel ## 19  school      XXX   F8.2            NA     yes   -99                  omitted ## 20  school      XXX   F8.2            NA     yes   -98           unclear answer ## 21  school      XXX   F8.2            NA     yes   -97                  unknown ## 22  school      XXX   F8.2            NA     yes     1              Hauptschule ## 23  school      XXX   F8.2            NA     yes     2               Realschule ## 24  school      XXX   F8.2            NA     yes     3 Integrierte Gesamtschule ## 25  school      XXX   F8.2            NA     yes     4                Gymnasium ##    missings ## 19     miss ## 20    valid ## 21     miss ## 22    valid ## 23    valid ## 24    valid ## 25    valid dat2 <- checkMissingsByValues(dat1, missingValues = -50:-99) ## The following variables have values in the 'missingValues' range which are not coded as missing: ## school ## 'miss' is inserted into column missings for 1 rows. extractMeta(dat2, vars = c(\"school\")) ##    varName varLabel format display_width labeled value                 valLabel ## 19  school      XXX   F8.2            NA     yes   -99                  omitted ## 20  school      XXX   F8.2            NA     yes   -98           unclear answer ## 21  school      XXX   F8.2            NA     yes   -97                  unknown ## 22  school      XXX   F8.2            NA     yes     1              Hauptschule ## 23  school      XXX   F8.2            NA     yes     2               Realschule ## 24  school      XXX   F8.2            NA     yes     3 Integrierte Gesamtschule ## 25  school      XXX   F8.2            NA     yes     4                Gymnasium ##    missings ## 19     miss ## 20     miss ## 21     miss ## 22    valid ## 23    valid ## 24    valid ## 25    valid"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"define-missing-values-by-hand","dir":"Articles","previous_headings":"","what":"Define missing values by hand","title":"FDZ Data Cleaning","text":"times, individual missings need tagged. changeMissings() tags missing values missings specifying value marks miss missings. values -97, -98 -99 now tagged miss.","code":"extractMeta(dat2, vars = c(\"info\")) ##   varName      varLabel format display_width labeled value valLabel missings ## 3    info General notes     A8            47      no    NA     <NA>     <NA> dat3 <- changeMissings(dat2, varName = \"info\", value = c(\"-97\", \"-98\", \"-99\"), missings = c(\"miss\", \"miss\", \"miss\")) extractMeta(dat3, vars = c(\"info\")) ##   varName      varLabel format display_width labeled value valLabel missings ## 3    info General notes     A8            47     yes   -99     <NA>     miss ## 4    info General notes     A8            47     yes   -98     <NA>     miss ## 5    info General notes     A8            47     yes   -97     <NA>     miss"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"recode-ids","dir":"Articles","previous_headings":"","what":"Recode IDs","title":"FDZ Data Cleaning","text":"ID variables recoded hidden identifiers state, school even name codes allow conclusions drawn individual persons. ensure IDs remain across multiple subsets describe person, recoded using template. First, path template created. two options: Creating new template (option 1 - first subset) applying existing template (option 2 - following subsets).","code":"f <- tempfile() ID_recode_template <- file.path(\"f\") # use your own file path instead of the tempfile"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"option-1-ids-recoded-with-creation-of-a-template-as--csv","dir":"Articles","previous_headings":"Recode IDs","what":"Option 1: IDs recoded with creation of a template as .csv","title":"FDZ Data Cleaning","text":"autoRecode() creates recoding template variable ID, saved .csv file, course new variable variable suffix _FDZ explanatory label suffix.","code":"dat3 <- autoRecode(dat3, var = \"ID\", var_suffix = \"_FDZ\", csv_path = ID_recode_template, label_suffix = \" (recoded by FDZ)\")"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"option-2-ids-recoded-with-application-of-a-template-e-g--created-by-a-previously-prepared-different-data-set-","dir":"Articles","previous_headings":"Recode IDs","what":"Option 2: IDs recoded with application of a template (e.g. created by a previously prepared, different data set).","title":"FDZ Data Cleaning","text":"Already existing templates can used following subsets. read.csv() imports template, can applied autoRecode() removeVars() deletes variables data set. case, old ID variable deleted.","code":"template <- read.csv(ID_recode_template) dat3 <- autoRecode(dat3, var = \"ID\", suffix = \"_FDZ\", csv_path = ID_recode_template, template = template,                    label_suffix = \"(rekodiert FDZ)\") # Apply template and overwrite dat3 <- removeVars(dat3, vars = c(\"ID\"))"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"convert-string-variables-to-numeric-variables","dir":"Articles","previous_headings":"","what":"Convert string variables to numeric variables","title":"FDZ Data Cleaning","text":"(semi)open variables two procedures. possible (e.g., small data set) go responses check whether strong privacy violations insults included, variables converted numeric ones emptied Scientific Use Files. Thereby, information remain accessible meta-level, can longer assigned person. many responses check privacy granted, variable emptied entirely Scientific Use Files. convert string variables numeric ones, string variables identified first. case variables ID_name, info, subjfav birth recognized string variables. next step converted.","code":"all_types <- do.call(rbind, lapply(namesGADS(dat3), function(nam) data.frame(varName = nam, type = class(dat3$dat[[nam]])))) all_types[all_types$type == \"character\", ] ##   varName      type ## 1      ID character ## 2 ID_name character ## 3    info character ## 5 subjfav character ## 9   birth character"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"option-1-convert-all-string-variables-automatically-overwrite-variables","dir":"Articles","previous_headings":"Convert string variables to numeric variables","what":"Option 1: Convert all string variables automatically (overwrite variables)","title":"FDZ Data Cleaning","text":"multiChar2fac() converts string variables identified advance numeric variables using loop.","code":"charNames <- all_types[all_types$type == \"character\", \"varName\"] for(charName in charNames) {   dat4 <- multiChar2fac(dat3, vars = charName, var_suffix = \"\", label_suffix = \"\") }"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"option-2-convert-string-variable-individually","dir":"Articles","previous_headings":"Convert string variables to numeric variables","what":"Option 2: Convert string variable individually","title":"FDZ Data Cleaning","text":"multiChar2fac() converts string variables named vars individually numeric variables. option var_suffix used, new variable created. var_suffix option left blank, existing variable overwritten.","code":"dat4 <- multiChar2fac(dat4, vars = c(\"ID_name\", \"info\", \"subjfav\", \"birth\"), var_suffix = \"_FDZ\", label_suffix = \"\") dat4 <- multiChar2fac(dat4, vars = c(\"ID_name\", \"info\", \"subjfav\", \"birth\"), var_suffix = \"\", label_suffix = \"\")"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"empty-variables-already-in-iza","dir":"Articles","previous_headings":"","what":"Empty variables already in IZA","title":"FDZ Data Cleaning","text":"Variables may even offered via remote computing system due strong data protection concerns emptied data sets. emptyTheseVariables() empties listed variables adds explanation variable label information removed. dat4 corresponds data set, vars lists variables emptied label_suffix automatically adds explanation variable label indicating data emptied anonymization reasons.","code":"extractMeta(dat4, vars = c(\"info\", \"ID_name\")) ##   varName      varLabel format display_width labeled value valLabel missings ## 2 ID_name           XXX     A8            NA      no    NA     <NA>     <NA> ## 3    info General notes     A8            47     yes   -99     <NA>     miss ## 4    info General notes     A8            47     yes   -98     <NA>     miss ## 5    info General notes     A8            47     yes   -97     <NA>     miss dat4_empty <- c(\"info\",                 \"ID_name\") dat5 <- emptyTheseVariables(dat4,                             vars = dat4_empty,                             label_suffix = \" (Zur Anonymisierung geleert (FDZ))\") extractMeta(dat5, vars = c(\"info\", \"ID_name\")) ##   varName                                          varLabel format ## 2 ID_name           XXX  (Zur Anonymisierung geleert (FDZ))     A8 ## 3    info General notes  (Zur Anonymisierung geleert (FDZ))     A8 ## 4    info General notes  (Zur Anonymisierung geleert (FDZ))     A8 ## 5    info General notes  (Zur Anonymisierung geleert (FDZ))     A8 ##   display_width labeled value valLabel missings ## 2            NA      no    NA     <NA>     <NA> ## 3            47     yes   -99     <NA>     miss ## 4            47     yes   -98     <NA>     miss ## 5            47     yes   -97     <NA>     miss"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"change-variable-and-value-labels","dir":"Articles","previous_headings":"","what":"Change variable and value labels","title":"FDZ Data Cleaning","text":"Variable value labels help us traceability comprehensibility data set. ChangeVarLabels() selects variable changed varName assigns corresponding label varLabel. ChangeValLabels() works similar way, corresponding value selected value label value created valLabel. Changing variable labels Changing value labels","code":"extractMeta(dat5, vars = c(\"school\")) ##    varName varLabel format display_width labeled value                 valLabel ## 30  school      XXX   F8.2            NA     yes   -99                  omitted ## 31  school      XXX   F8.2            NA     yes   -98           unclear answer ## 32  school      XXX   F8.2            NA     yes   -97                  unknown ## 33  school      XXX   F8.2            NA     yes     1              Hauptschule ## 34  school      XXX   F8.2            NA     yes     2               Realschule ## 35  school      XXX   F8.2            NA     yes     3 Integrierte Gesamtschule ## 36  school      XXX   F8.2            NA     yes     4                Gymnasium ##    missings ## 30     miss ## 31     miss ## 32     miss ## 33    valid ## 34    valid ## 35    valid ## 36    valid dat6 <- changeVarLabels(dat5, varName = \"school\", varLabel = \"School type\") extractMeta(dat6, vars = c(\"school\")) ##    varName    varLabel format display_width labeled value ## 30  school School type   F8.2            NA     yes   -99 ## 31  school School type   F8.2            NA     yes   -98 ## 32  school School type   F8.2            NA     yes   -97 ## 33  school School type   F8.2            NA     yes     1 ## 34  school School type   F8.2            NA     yes     2 ## 35  school School type   F8.2            NA     yes     3 ## 36  school School type   F8.2            NA     yes     4 ##                    valLabel missings ## 30                  omitted     miss ## 31           unclear answer     miss ## 32                  unknown     miss ## 33              Hauptschule    valid ## 34               Realschule    valid ## 35 Integrierte Gesamtschule    valid ## 36                Gymnasium    valid extractMeta(dat6, vars = c(\"books\")) ##    varName                varLabel format display_width labeled value ## 23   books Number of books at home  F10.0            NA     yes   -99 ## 24   books Number of books at home  F10.0            NA     yes     1 ## 25   books Number of books at home  F10.0            NA     yes     2 ## 26   books Number of books at home  F10.0            NA     yes     3 ## 27   books Number of books at home  F10.0            NA     yes     4 ## 28   books Number of books at home  F10.0            NA     yes     5 ## 29   books Number of books at home  F10.0            NA     yes     6 ##               valLabel missings ## 23             omitted     miss ## 24          0-10 books    valid ## 25         11-25 books    valid ## 26        26-100 books    valid ## 27       101-200 books    valid ## 28                        valid ## 29 more than 500 books    valid dat7 <- changeValLabels(dat6, varName = \"books\", value = 5, valLabel = \"201-500 books\") extractMeta(dat7, vars = c(\"books\")) ##    varName                varLabel format display_width labeled value ## 23   books Number of books at home  F10.0            NA     yes   -99 ## 24   books Number of books at home  F10.0            NA     yes     1 ## 25   books Number of books at home  F10.0            NA     yes     2 ## 26   books Number of books at home  F10.0            NA     yes     3 ## 27   books Number of books at home  F10.0            NA     yes     4 ## 28   books Number of books at home  F10.0            NA     yes     5 ## 29   books Number of books at home  F10.0            NA     yes     6 ##               valLabel missings ## 23             omitted     miss ## 24          0-10 books    valid ## 25         11-25 books    valid ## 26        26-100 books    valid ## 27       101-200 books    valid ## 28       201-500 books    valid ## 29 more than 500 books    valid"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"anonymization-form-grouping-variable","dir":"Articles","previous_headings":"","what":"Anonymization: Form grouping variable","title":"FDZ Data Cleaning","text":"Small case numbers pose risk anonymity. variables number cases <6, ratings, feelings opinions contain sensitive information individuals, advisable combine small numbers cases meaningful groups. , cloneVariable() creates new _FDZ variable cloning variable grouped. varName original variable name entered, new_varName variable name including appendix “_FDZ”. variable label automatically adjusted option label_suffix. recodeGADS() replaces old values (oldValues) new ones (newValues) changeValLabels() changes value labels new groupings. Groupings multiple variables can also performed using loop. variables given temporary name consisting variable name suffix “_FDZ”. varname represents individual variable, summarized gr_var. individual steps (cloneVariable(), recodeGADS(),changeValLabels()) therefore performed variables turn. Now two groups created. first group includes students grades 1-4, means passed. group, students grades 5 6, means passed. groups created three subjects Math, German English .","code":"extractMeta(dat7, vars = c(\"age\")) ##   varName varLabel format display_width labeled value valLabel missings ## 9     age      Age  F10.0            NA      no    NA     <NA>     <NA> dat8 <- cloneVariable(dat7, varName = \"age\", new_varName = \"age_FDZ\", label_suffix = \" (Zur Anonymisierung aggregiert (FDZ))\")  dat8 <- recodeGADS(dat8, varName = \"age_FDZ\", oldValues = c(13, 14, 15, 17),                   newValues = c(13, 13, 15, 15)) dat8 <- changeValLabels(dat8, varName = \"age_FDZ\", value = c(13, 15), valLabel = c(\"13-14\", \"15-17\")) extractMeta(dat8, vars = c(\"age_FDZ\")) ##    varName                                   varLabel format display_width ## 40 age_FDZ Age  (Zur Anonymisierung aggregiert (FDZ))  F10.0            NA ## 41 age_FDZ Age  (Zur Anonymisierung aggregiert (FDZ))  F10.0            NA ##    labeled value valLabel missings ## 40     yes    13    13-14    valid ## 41     yes    15    15-17    valid extractMeta(dat8, vars = c(\"grade_math\")) ##       varName          varLabel format display_width labeled value valLabel ## 37 grade_math Grade mathematics   F8.2            NA      no    NA     <NA> ##    missings ## 37     <NA> dat9 <- dat8 gr_var <- c(\"grade_math\", \"grade_germ\", \"grade_eng\") for (varname in gr_var) {   tempnewname <- paste0(varname, \"_FDZ\")   dat9 <- cloneVariable(dat9, varName = varname,                         new_varName = tempnewname, label_suffix = \" (Zur Anonymisierung aggregiert (FDZ))\")   dat9 <- recodeGADS(dat9, varName = tempnewname,                       oldValues = c(1:6),                       newValues = c(rep(1,4),rep(2,2)))   dat9 <- changeValLabels(dat9, varName = tempnewname, value = c(1, 2),                            valLabel = c(\"passed\", \"not passed\")) } extractMeta(dat9, vars = c(\"grade_math_FDZ\")) ##           varName                                                 varLabel ## 42 grade_math_FDZ Grade mathematics  (Zur Anonymisierung aggregiert (FDZ)) ## 43 grade_math_FDZ Grade mathematics  (Zur Anonymisierung aggregiert (FDZ)) ##    format display_width labeled value   valLabel missings ## 42   F8.2            NA     yes     1     passed    valid ## 43   F8.2            NA     yes     2 not passed    valid"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"creating-the-version-variable","dir":"Articles","previous_headings":"","what":"Creating the version variable","title":"FDZ Data Cleaning","text":"indicate state data set, data set provided version variable. contains version data record date last change. createVariable() creates variable whereas relocateVariable() places beginning record consistent, visible place.","code":"version_name <- \"Version_v1_2023_11\" dat10 <- createVariable(dat9, varName = version_name) dat10 <- relocateVariable(dat10, var = version_name, after = NULL)"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"change-variable-order","dir":"Articles","previous_headings":"","what":"Change variable order","title":"FDZ Data Cleaning","text":"Newly created variables initially placed end data set. orderLike() rearranges variables specifying variables new order. Often matter individual variables supposed sorted , newly created grouping variables behind emptied original variable. relocateVariable() sets variables selected one.","code":"dat11 <- orderLike(dat10, newOrder = c(\"Version_v1_2023_11\", \"ID\", \"ID_name\", \"info\", \"home\", \"birth\", \"age\", \"age_FDZ\", \"sex\", \"siblings\", \"books\", \"school\", \"subjfav\", \"grade_math\", \"grade_math_FDZ\", \"grade_germ\", \"grade_germ_FDZ\", \"grade_eng\", \"grade_eng_FDZ\")) dat11 <- relocateVariable(dat11, var = \"age_FDZ\", after = \"age\")"},{"path":"https://beckerbenj.github.io/eatFDZ/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benjamin Becker. Author, maintainer. Annegret Rucker. Author, contributor. Sebastian Weirich. Author, contributor. Claudia Neuendorf. Author, contributor.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Becker B, Rucker , Weirich S, Neuendorf C (2024). eatFDZ: Data checking validation. R package version 0.7.0, https://beckerbenj.github.io/eatFDZ/.","code":"@Manual{,   title = {eatFDZ: Data checking and validation},   author = {Benjamin Becker and Annegret Rucker and Sebastian Weirich and Claudia Neuendorf},   year = {2024},   note = {R package version 0.7.0},   url = {https://beckerbenj.github.io/eatFDZ/}, }"},{"path":[]},{"path":"https://beckerbenj.github.io/eatFDZ/index.html","id":"workflow","dir":"","previous_headings":"","what":"Workflow","title":"Data checking and validation","text":"R package automates workflows Forschungsdatenzentrum (FDZ) IQB. mainly includes automated data checks.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data checking and validation","text":"","code":"# Install eatFDZ from GitHub via remotes::install_github(\"beckerbenj/eatFDZ\")"},{"path":"https://beckerbenj.github.io/eatFDZ/index.html","id":"run-all-checks","dir":"","previous_headings":"","what":"Run all checks","title":"Data checking and validation","text":"Run checks recommended FDZ example data set (example_data2.sav) within package.","code":"library(eatFDZ)  # get data set path dataset <- system.file(\"extdata\", \"example_data2.sav\", package = \"eatFDZ\")  # run all checks check_report <- check_all(dataset, missingRange = -50:-99,                        missingRegex = \"missing|omitted|not reached|nicht beantwortet|ausgelassen\",                        idVar = NULL,                        sdcVars = NULL)"},{"path":"https://beckerbenj.github.io/eatFDZ/index.html","id":"create-a-check-report","dir":"","previous_headings":"","what":"Create a check report","title":"Data checking and validation","text":"Write check report excel (.xlsx).","code":"write_check_report(check_report, file_path = tempfile(fileext = \".xlsx\"))"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Run all data checks. — check_all","title":"Run all data checks. — check_all","text":"Run data checks.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run all data checks. — check_all","text":"","code":"check_all(   sav_path,   pdf_path = NULL,   encoding = NULL,   missingRange = -50:-99,   missingRegex = \"missing|omitted|not reached|nicht beantwortet|ausgelassen\",   idVar = NULL,   sdcVars = NULL )"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run all data checks. — check_all","text":"sav_path Path SPSS file pdf_path Path .pdf file encoding Optional: character encoding used reading .sav file. default, NULL, uses encoding specified file, sometimes value incorrect useful able override . missingRange Numerical range missing tags. missingRegex Regular expression value labels missing tags. idVar Name(s) identifier variable GADSdat object. NULL, first variable data set taken idVar. sdcVars Variable names variables potential statistical disclosure control issues.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run all data checks. — check_all","text":"data.frame.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run all data checks. — check_all","text":"functions calls check_file_name, check_var_names, check_meta_encoding, check_id, check_var_labels, checkMissingValLabels, check_missing_range, check_missing_regex, sdc_check, check_docu.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run all data checks. — check_all","text":"","code":"dataset <- system.file(\"extdata\", \"example_data2.sav\", package = \"eatFDZ\") out <- check_all(dataset) #>                              Test          Result #> 1          lengthy_variable_names         passing #> 2    special_signs_variable_names Issues detected #> 3         special_signs_meta_data Issues detected #> 4                     missing_IDs Issues detected #> 5                   duplicate_IDs Issues detected #> 6         missing_variable_labels Issues detected #> 7            missing_value_labels Issues detected #> 8              missing_range_tags Issues detected #> 9              missing_regex_tags Issues detected #> 10 statistical_disclosure_control Issues detected #> 11            character_variables Issues detected #> 12                     docu_check      Not tested"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_character_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Check existence of character variables. — check_character_vars","title":"Check existence of character variables. — check_character_vars","text":"Check existence character variables GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_character_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check existence of character variables. — check_character_vars","text":"","code":"check_character_vars(GADSdat)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_character_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check existence of character variables. — check_character_vars","text":"GADSdat GADSdat object.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_character_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check existence of character variables. — check_character_vars","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_character_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check existence of character variables. — check_character_vars","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu.html","id":null,"dir":"Reference","previous_headings":"","what":"Check documentation of data sets. — check_docu","title":"Check documentation of data sets. — check_docu","text":"Check variables one multiple data sets saved sav included pdf documentation.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check documentation of data sets. — check_docu","text":"","code":"check_docu(   sav_path,   pdf_path,   post_words = 2,   case_sensitive = FALSE,   encoding = NULL )"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check documentation of data sets. — check_docu","text":"sav_path Character vector paths .sav files. pdf_path Character vector paths .pdf files. post_words Number words variable names extracted PDF. case_sensitive TRUE, upper lower case differentiated variable name matching. FALSE, case ignored. encoding Optional: character encoding used reading .sav file. default, NULL, uses encoding specified file, sometimes value incorrect useful able override .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check documentation of data sets. — check_docu","text":"data.frame variable names, count mentions pdf (count), words variable names (post) name data set variable occurs (data_set).","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check documentation of data sets. — check_docu","text":"common requirement data documentation complete codebook. check_docu function can used check, whether variables (column names) one multiple sav data sets mentioned documentation, provided pdf files. Multiple pdf files treated one single pdf file. multiple data sets output sorted data set data_set column indicates data set variable name belongs. Error messages PDF error: Invalid Font Weight can savely ignored. easier reading output, output can written excel file, example using write.xlsx function openxlsx package write_xlsx function eatAnalysis package.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check documentation of data sets. — check_docu","text":"","code":"# File pathes sav_path1 <- system.file(\"extdata\", \"helper_spss_p1.sav\", package = \"eatFDZ\") sav_path2 <- system.file(\"extdata\", \"helper_spss_p2.sav\", package = \"eatFDZ\") pdf_path1 <- system.file(\"extdata\", \"helper_codebook_p1.pdf\", package = \"eatFDZ\") pdf_path2 <- system.file(\"extdata\", \"helper_codebook_p2.pdf\", package = \"eatFDZ\")  check_df <- check_docu(sav_path = c(sav_path1, sav_path2),                        pdf_path = c(pdf_path1, pdf_path2), post_words = 2)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Check documentation of data sets. — check_docu_excel","title":"Check documentation of data sets. — check_docu_excel","text":"Check variables one multiple data sets saved sav included excel documentation.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check documentation of data sets. — check_docu_excel","text":"","code":"check_docu_excel(sav_path, excel_path, case_sensitive = FALSE, encoding = NULL)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check documentation of data sets. — check_docu_excel","text":"sav_path Character vector paths .sav files. excel_path Character vector paths .xlsx files. case_sensitive TRUE, upper lower case differentiated variable name matching. FALSE, case ignored. encoding Optional: character encoding used reading .sav file. default, NULL, uses encoding specified file, sometimes value incorrect useful able override .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check documentation of data sets. — check_docu_excel","text":"data.frame variable names, count mentions pdf (count), name data set variable occurs (data_set).","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_excel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check documentation of data sets. — check_docu_excel","text":"common requirement data documentation complete codebook. check_docu_excel function can used check, whether variables (column names) one multiple sav data sets mentioned documentation, provided excel files. Multiple pdf files treated one single pdf file. multiple data sets output sorted data set data_set column indicates data set variable name belongs. easier reading output, output can written excel file, example using write.xlsx function openxlsx package write_xlsx function eatAnalysis package.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check documentation of data sets. — check_docu_excel","text":"","code":"# File pathes sav_path1 <- system.file(\"extdata\", \"helper_spss_p1.sav\", package = \"eatFDZ\") sav_path2 <- system.file(\"extdata\", \"helper_spss_p2.sav\", package = \"eatFDZ\") excel_path1 <- system.file(\"extdata\", \"helper_codebook_p1.xlsx\", package = \"eatFDZ\")  check_df <- check_docu_excel(sav_path = c(sav_path1, sav_path2),                        excel_path = c(excel_path1))"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_mez.html","id":null,"dir":"Reference","previous_headings":"","what":"Check documentation of data sets. — check_docu_mez","title":"Check documentation of data sets. — check_docu_mez","text":"specific version check_docu written MEZ study. variable name can found documentation, variable name split first numeral * added stem.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_mez.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check documentation of data sets. — check_docu_mez","text":"","code":"check_docu_mez(   sav_path,   pdf_path,   post_words = 2,   case_sensitive = FALSE,   encoding = NULL )"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_mez.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check documentation of data sets. — check_docu_mez","text":"sav_path Character vector paths .sav files. pdf_path Character vector paths .pdf files. post_words Number words variable names extracted PDF. case_sensitive TRUE, upper lower case differentiated variable name matching. FALSE, case ignored. encoding Optional: character encoding used reading .sav file. default, NULL, uses encoding specified file, sometimes value incorrect useful able override .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_mez.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check documentation of data sets. — check_docu_mez","text":"data.frame variable names, count mentions pdf (count), words variable names (post) name data set variable occurs (data_set).","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_file_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Check file name. — check_file_name","title":"Check file name. — check_file_name","text":"Check validate file name.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_file_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check file name. — check_file_name","text":"","code":"check_file_name(path)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_file_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check file name. — check_file_name","text":"path File path.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_file_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check file name. — check_file_name","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_file_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check file name. — check_file_name","text":"Checks variable names include special signs Umlaute spaces","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_file_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check file name. — check_file_name","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Check an identifier variable. — check_id","title":"Check an identifier variable. — check_id","text":"Check uniqueness non-missingness variable GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check an identifier variable. — check_id","text":"","code":"check_id(GADSdat, idVar = NULL)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check an identifier variable. — check_id","text":"GADSdat GADSdat object. idVar Name(s) identifier variable GADSdat object. NULL, first variable data set taken idVar.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check an identifier variable. — check_id","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check an identifier variable. — check_id","text":"Checks include identifier variable unique (.e., duplicates)? missing values identifier variable?","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check an identifier variable. — check_id","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_meta_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Check meta data encoding. — check_meta_encoding","title":"Check meta data encoding. — check_meta_encoding","text":"Check occurence specials signs meta data GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_meta_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check meta data encoding. — check_meta_encoding","text":"","code":"check_meta_encoding(GADSdat)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_meta_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check meta data encoding. — check_meta_encoding","text":"GADSdat GADSdat object.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_meta_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check meta data encoding. — check_meta_encoding","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_meta_encoding.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check meta data encoding. — check_meta_encoding","text":"Checks meta data include special signs Umlaute","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_meta_encoding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check meta data encoding. — check_meta_encoding","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Check missing range. — check_missing_range","title":"Check missing range. — check_missing_range","text":"Check labeled values fall range missing values GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check missing range. — check_missing_range","text":"","code":"check_missing_range(GADSdat, missingRange = -50:-99)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check missing range. — check_missing_range","text":"GADSdat GADSdat object. missingRange Values declared missings.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check missing range. — check_missing_range","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check missing range. — check_missing_range","text":"Checks include ...","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check missing range. — check_missing_range","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Check missing range. — check_missing_regex","title":"Check missing range. — check_missing_regex","text":"Check labeled values fall range missing values GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check missing range. — check_missing_regex","text":"","code":"check_missing_regex(   GADSdat,   missingRegex = \"missing|omitted|not reached|nicht beantwortet|ausgelassen\" )"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check missing range. — check_missing_regex","text":"GADSdat GADSdat object. missingRegex Value labels declared missings.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check missing range. — check_missing_regex","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_regex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check missing range. — check_missing_regex","text":"Checks include ...","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check missing range. — check_missing_regex","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_sdc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Statistical Disclosure Control Report. — check_sdc","title":"Create a Statistical Disclosure Control Report. — check_sdc","text":"Create statistical disclosure control report: variables categories low absolute frequencies, might lead statistical data disclosure issues?","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_sdc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Statistical Disclosure Control Report. — check_sdc","text":"","code":"check_sdc(GADSdat, vars = eatGADS::namesGADS(GADSdat), boundary = 5)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_sdc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Statistical Disclosure Control Report. — check_sdc","text":"GADSdat GADSdat object. vars Character vector variable names. variables checked? boundary Integer number: categories less equal boundary observations flagged","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_sdc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Statistical Disclosure Control Report. — check_sdc","text":"data.frame.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_sdc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Statistical Disclosure Control Report. — check_sdc","text":"Individual participants studies educational large-scale assessments usually must remain non-identifiable individual level. function checks specified variables GADSdat object low frequency categories might lead statistical disclosure control issues. Currently, uni-variate check implemented.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_sdc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Statistical Disclosure Control Report. — check_sdc","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Check existence of variable labels. — check_var_labels","title":"Check existence of variable labels. — check_var_labels","text":"Check existence variable labels variables GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check existence of variable labels. — check_var_labels","text":"","code":"check_var_labels(GADSdat)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check existence of variable labels. — check_var_labels","text":"GADSdat GADSdat object.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check existence of variable labels. — check_var_labels","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check existence of variable labels. — check_var_labels","text":"Checks include variable labels assigned?","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check existence of variable labels. — check_var_labels","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Check variable names. — check_var_names","title":"Check variable names. — check_var_names","text":"Check variable names variables GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check variable names. — check_var_names","text":"","code":"check_var_names(GADSdat)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check variable names. — check_var_names","text":"GADSdat GADSdat object.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check variable names. — check_var_names","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check variable names. — check_var_names","text":"Checks variable names include special signs Umlaute column names \".\" .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check variable names. — check_var_names","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for lengthy variable names. — check_var_names_length","title":"Check for lengthy variable names. — check_var_names_length","text":"Check lengthy variable names variables GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for lengthy variable names. — check_var_names_length","text":"","code":"check_var_names_length(GADSdat, boundary = 30)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for lengthy variable names. — check_var_names_length","text":"GADSdat GADSdat object. boundary Numeric vector lenght 1. Boundary: Number characters variables names allowed .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for lengthy variable names. — check_var_names_length","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for lengthy variable names. — check_var_names_length","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/compare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare existing variables and meta data structure between two data sets. — compare_data","title":"Compare existing variables and meta data structure between two data sets. — compare_data","text":"Compare existing variables meta data structure two data sets.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/compare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare existing variables and meta data structure between two data sets. — compare_data","text":"","code":"compare_data(data1, data2, name_data1 = \"data1\", name_data2 = \"data2\", ID_var)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/compare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare existing variables and meta data structure between two data sets. — compare_data","text":"data1 Data set one, provided GADSdat object. data2 Data set two, provided GADSdat object. name_data1 Character vector length 1. Name data1. name_data2 Character vector length 1. Name data2. ID_var Identifier variable data sets.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/compare_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare existing variables and meta data structure between two data sets. — compare_data","text":"function performs comparison two GADSdat objects. Variables included data set compared reported, well meta data differences (variable labels, SPSS format, value labels, missing tags).","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/compare_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare existing variables and meta data structure between two data sets. — compare_data","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/data_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Data clean. — data_clean","title":"Data clean. — data_clean","text":"function deprecated, please use sdc_check instead.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/data_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data clean. — data_clean","text":"","code":"data_clean()"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/download_fdz.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and import an empty FDZ file. — download_fdz","title":"Download and import an empty FDZ file. — download_fdz","text":"Download import empty data set FDZ homepage.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/download_fdz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and import an empty FDZ file. — download_fdz","text":"","code":"download_fdz(   study = c(\"PISA\"),   year = c(\"2018\", \"2015\", \"2012\", \"2009\", \"2006\", \"2003\", \"2000\"),   data_type = c(\"stud_quest\") )"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/download_fdz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and import an empty FDZ file. — download_fdz","text":"study Name study year Year assessment (needed longitudinal assessments). data_type Type data.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/download_fdz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and import an empty FDZ file. — download_fdz","text":"function downloads imports empty data set (Leerdatensatz) FDZ homepage. data sets contain zero rows. data imported via import_spss GADSdat object.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/download_fdz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and import an empty FDZ file. — download_fdz","text":"","code":"fdz_pisa <- download_fdz(study = \"PISA\", year = \"2015\",                         data_type = \"stud_quest\")"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/download_pisa.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and import an empty PISA public use file. — download_pisa","title":"Download and import an empty PISA public use file. — download_pisa","text":"Download import empty PISA public use file (containing first data row) OECD homepage.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/download_pisa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and import an empty PISA public use file. — download_pisa","text":"","code":"download_pisa(   year = c(\"2018\", \"2015\", \"2012\", \"2009\", \"2006\", \"2003\", \"2000\"),   data_type = c(\"stud_quest\") )"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/download_pisa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and import an empty PISA public use file. — download_pisa","text":"year Year PISA cycle data part . data_type Type PISA data. Currently supported student background data (\"stud_quest\").","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/download_pisa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and import an empty PISA public use file. — download_pisa","text":"function downloads zip file OECD homepage temporary directory, unzips imports data single data row via read_sav. downloading full PISA data sets see EdSurvey package. data imported GADSdat object.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/download_pisa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and import an empty PISA public use file. — download_pisa","text":"","code":"if (FALSE) { # \\dontrun{ pisa <- download_pisa(year = \"2015\", data_type = \"stud_quest\") } # }"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/english_words.html","id":null,"dir":"Reference","previous_headings":"","what":"English Language Corpus — english_words","title":"English Language Corpus — english_words","text":"English language corpus downloaded https://github.com/dwyl/english-words.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/english_words.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"English Language Corpus — english_words","text":"","code":"english_words"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/english_words.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"English Language Corpus — english_words","text":"character vector 459866 entries.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/english_words.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"English Language Corpus — english_words","text":"https://github.com/dwyl/english-words english_words","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/german_words.html","id":null,"dir":"Reference","previous_headings":"","what":"German Language Corpus — german_words","title":"German Language Corpus — german_words","text":"German language corpus downloaded https://github.com/davidak/wortliste.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/german_words.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"German Language Corpus — german_words","text":"","code":"german_words"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/german_words.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"German Language Corpus — german_words","text":"character vector 239649 entries.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/german_words.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"German Language Corpus — german_words","text":"https://github.com/davidak/wortliste german_words","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/reverse_check_docu.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse check documentation of data sets. — reverse_check_docu","title":"Reverse check documentation of data sets. — reverse_check_docu","text":"function extracts words pdf file discards words variables data set words white listed. Based list words returned, might listed variables documentation data set.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/reverse_check_docu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse check documentation of data sets. — reverse_check_docu","text":"","code":"reverse_check_docu(   white_list = c(english_words, german_words),   pdf_path,   sav_path,   encoding = NULL )"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/reverse_check_docu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse check documentation of data sets. — reverse_check_docu","text":"white_list character vector containing words flagged. Defaults combination German English corpus. pdf_path Character vector paths .pdf files. sav_path Character vector paths .sav files. encoding character encoding used file. default, NULL, use encoding specified file, sometimes value incorrect useful able override .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/reverse_check_docu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse check documentation of data sets. — reverse_check_docu","text":"data.frame columns suspicious_words, missing_documentation comment.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/reverse_check_docu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse check documentation of data sets. — reverse_check_docu","text":"","code":"# File pathes sav_path1 <- system.file(\"extdata\", \"helper_spss_p1.sav\", package = \"eatFDZ\") sav_path2 <- system.file(\"extdata\", \"helper_spss_p2.sav\", package = \"eatFDZ\") pdf_path1 <- system.file(\"extdata\", \"helper_codebook_p1.pdf\", package = \"eatFDZ\") pdf_path2 <- system.file(\"extdata\", \"helper_codebook_p2.pdf\", package = \"eatFDZ\") pdf_path3 <- system.file(\"extdata\", \"helper_codebook_p3.pdf\", package = \"eatFDZ\")  check_df <- reverse_check_docu(sav_path = c(sav_path1, sav_path2),                        pdf_path = c(pdf_path1, pdf_path2, pdf_path3))"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/sdc_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Statistical Disclosure Control Report. — sdc_check","title":"Create a Statistical Disclosure Control Report. — sdc_check","text":"Create statistical disclosure control report: variables categories low absolute frequencies, might lead statistical data disclosure issues?","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/sdc_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Statistical Disclosure Control Report. — sdc_check","text":"","code":"sdc_check(fileName, boundary = 5, exclude = NULL, encoding = NULL)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/sdc_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Statistical Disclosure Control Report. — sdc_check","text":"fileName Character string SPSS file boundary Integer number: categories less equal boundary observations flagged exclude Optional: character vector variable names excluded report encoding Optional: character encoding used reading .sav file. default, NULL, uses encoding specified file, sometimes value incorrect useful able override .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/sdc_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Statistical Disclosure Control Report. — sdc_check","text":"data.frame.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/sdc_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Statistical Disclosure Control Report. — sdc_check","text":"Individual participants studies educational large-scale assessments usually must remain non-identifiable individual level. function checks variables GADSdat object low frequency categories might lead statistical disclosure control issues. Currently, uni-variate check implemented.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/sdc_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Statistical Disclosure Control Report. — sdc_check","text":"","code":"sav_path <- system.file(\"extdata\", \"LV_2011_CF.sav\", package = \"eatFDZ\")  ## don't report low frequencies for unique id variables exclude<- c(\"idstud_FDZ\", \"idsch_FDZ\")  ## sdc_report <- sdc_check(fileName = sav_path, exclude=exclude)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/write_check_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a check report. — write_check_report","title":"Write a check report. — write_check_report","text":"Write check report created check_all excel.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/write_check_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a check report. — write_check_report","text":"","code":"write_check_report(check_report, file_path, language = c(\"German\", \"English\"))"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/write_check_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a check report. — write_check_report","text":"check_report check report created check_all. file_path File destination. language language output written? Currently German supported.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/write_check_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a check report. — write_check_report","text":"function writes check report provided check_all via openxlsx excel. Formating additional explanations added increase readability usability.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/write_check_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a check report. — write_check_report","text":"","code":"dataset <- system.file(\"extdata\", \"example_data2.sav\", package = \"eatFDZ\") out <- check_all(dataset) #>                              Test          Result #> 1          lengthy_variable_names         passing #> 2    special_signs_variable_names Issues detected #> 3         special_signs_meta_data Issues detected #> 4                     missing_IDs Issues detected #> 5                   duplicate_IDs Issues detected #> 6         missing_variable_labels Issues detected #> 7            missing_value_labels Issues detected #> 8              missing_range_tags Issues detected #> 9              missing_regex_tags Issues detected #> 10 statistical_disclosure_control Issues detected #> 11            character_variables Issues detected #> 12                     docu_check      Not tested write_check_report(out, file_path = tempfile())"},{"path":"https://beckerbenj.github.io/eatFDZ/news/index.html","id":"eatfdz-070","dir":"Changelog","previous_headings":"","what":"eatFDZ 0.7.0","title":"eatFDZ 0.7.0","text":"Initial Github release.","code":""}]
