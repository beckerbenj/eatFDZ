[{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"define-missings-semi-automatically","dir":"Articles","previous_headings":"","what":"Define missings semi-automatically","title":"FDZ_Data_Cleaning","text":"Sometimes missing values correctly defined missing. place missings recoded semi-automatically. checkMissings() tested specified missings labels occur data corresponding items tagged missing. can observe value -99 label omitted now tagged miss. Similar principle , certain range values tagged missing:","code":"extractMeta(dat, vars = c(\"books\")) # usually, we wouldn't know yet that this variable contains these value labels. This is for demonstration purposes to see the before and after effect of the function ##    varName                varLabel format display_width labeled value ## 12   books Number of books at home  F10.0            NA     yes   -99 ## 13   books Number of books at home  F10.0            NA     yes     1 ## 14   books Number of books at home  F10.0            NA     yes     2 ## 15   books Number of books at home  F10.0            NA     yes     3 ## 16   books Number of books at home  F10.0            NA     yes     4 ## 17   books Number of books at home  F10.0            NA     yes     5 ## 18   books Number of books at home  F10.0            NA     yes     6 ##               valLabel missings ## 12             omitted    valid ## 13          0-10 books    valid ## 14         11-25 books    valid ## 15        26-100 books    valid ## 16       101-200 books    valid ## 17                        valid ## 18 more than 500 books    valid missinglabels <- paste(\"missing\", \"unknown\",                        \"omitted\", \"unclear answer\",                        sep = \"|\") dat1 <- checkMissings(dat, missingLabel = missinglabels) ## The following variables have value labels including the term 'missing|unknown|omitted|unclear answer' which are not coded as missing: ## books, school ## 'miss' is inserted into column missings for 4 rows. extractMeta(dat1, vars = c(\"books\")) ##    varName                varLabel format display_width labeled value ## 12   books Number of books at home  F10.0            NA     yes   -99 ## 13   books Number of books at home  F10.0            NA     yes     1 ## 14   books Number of books at home  F10.0            NA     yes     2 ## 15   books Number of books at home  F10.0            NA     yes     3 ## 16   books Number of books at home  F10.0            NA     yes     4 ## 17   books Number of books at home  F10.0            NA     yes     5 ## 18   books Number of books at home  F10.0            NA     yes     6 ##               valLabel missings ## 12             omitted     miss ## 13          0-10 books    valid ## 14         11-25 books    valid ## 15        26-100 books    valid ## 16       101-200 books    valid ## 17                        valid ## 18 more than 500 books    valid dat2 <- checkMissingsByValues(dat1, missingValues = -50:-99)"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"define-missing-values-by-hand","dir":"Articles","previous_headings":"","what":"Define missing values by hand","title":"FDZ_Data_Cleaning","text":"need tag missings hand, use changeMissings(). missing values can tagged missings specifying value marking miss missings. values -97, -98 -99 now tagged miss.","code":"extractMeta(dat2, vars = c(\"info\")) ##   varName      varLabel format display_width labeled value valLabel missings ## 3    info General notes     A8            NA      no    NA     <NA>     <NA> dat3 <- changeMissings(dat2, varName = \"info\", value = c(\"-97\", \"-98\", \"-99\"), missings = c(\"miss\", \"miss\", \"miss\")) extractMeta(dat3, vars = c(\"info\")) ##   varName      varLabel format display_width labeled value valLabel missings ## 3    info General notes     A8            NA     yes   -99     <NA>     miss ## 4    info General notes     A8            NA     yes   -98     <NA>     miss ## 5    info General notes     A8            NA     yes   -97     <NA>     miss"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"recode-ids","dir":"Articles","previous_headings":"","what":"Recode IDs","title":"FDZ_Data_Cleaning","text":"ensure IDs remain across multiple subsets describe person, recode using template. first step create path template. , two options: Create new template (option 1 - first subset) apply existing template (option 2 - following subsets).","code":"f <- tempfile() ID_recode_template <- file.path(\"f\") # use your own file path instead of the tempfile"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"option-1-recode-ids-with-creation-of-a-template-as--csv","dir":"Articles","previous_headings":"Recode IDs","what":"Option 1: Recode IDs with creation of a template as .csv","title":"FDZ_Data_Cleaning","text":"recoding template created .","code":"dat3 <- autoRecode(dat3, var = \"ID\", var_suffix = \"_FDZ\", csv_path = ID_recode_template, label_suffix = \" (rekodiert FDZ)\")"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"option-2-recode-ids-with-application-of-a-template-e-g--created-by-a-previously-prepared-different-data-set-","dir":"Articles","previous_headings":"Recode IDs","what":"Option 2: Recode IDs with application of a template (e.g.Â created by a previously prepared, different data set).","title":"FDZ_Data_Cleaning","text":"already existing template applied. Delete old ID variables necessary.","code":"template <- read.csv(ID_recode_template) dat3 <- autoRecode(dat3, var = \"ID\", suffix = \"_FDZ\", csv_path = ID_recode_template, template = template,                    label_suffix = \"(rekodiert FDZ)\") # Apply template and overwrite dat3 <- removeVars(dat3, vars = c(\"ID\"))"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"convert-string-variables-to-numeric-variables","dir":"Articles","previous_headings":"","what":"Convert string variables to numeric variables","title":"FDZ_Data_Cleaning","text":"(semi)open variables two procedures. possible (e.g., small data set) go responses check whether strong privacy violations insults included, variables converted numeric ones emptied Scientific Use Files. way, information remain accessible meta-level, can longer assigned person. many responses check privacy granted, variable emptied entirely Scientific Use Files. convert string variables numeric ones, string variables identified first. case variables ID_name, info, subjfav birth recognized string variables. next step can converted.","code":"all_types <- do.call(rbind, lapply(namesGADS(dat3), function(nam) data.frame(varName = nam, type = class(dat3$dat[[nam]])))) all_types[all_types$type == \"character\", ] ##   varName      type ## 1      ID character ## 2 ID_name character ## 3    info character ## 5 subjfav character ## 9   birth character"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"option-1-convert-all-string-variables-automatically-overwrite-variables","dir":"Articles","previous_headings":"Convert string variables to numeric variables","what":"Option 1: Convert all string variables automatically (overwrite variables)","title":"FDZ_Data_Cleaning","text":"","code":"charNames <- all_types[all_types$type == \"character\", \"varName\"] for(charName in charNames) {   dat4 <- multiChar2fac(dat3, vars = charName, var_suffix = \"\", label_suffix = \"\") }"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"option-2-convert-string-variable-individually","dir":"Articles","previous_headings":"Convert string variables to numeric variables","what":"Option 2: Convert string variable individually","title":"FDZ_Data_Cleaning","text":"Convert new variable: Overwrite variable:","code":"dat4 <- multiChar2fac(dat4, vars = c(\"ID_name\", \"info\", \"subjfav\", \"birth\"), var_suffix = \"_FDZ\", label_suffix = \"\") dat4 <- multiChar2fac(dat4, vars = c(\"ID_name\", \"info\", \"subjfav\", \"birth\"), var_suffix = \"\", label_suffix = \"\")"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"empty-variables-already-in-iza","dir":"Articles","previous_headings":"","what":"Empty variables already in IZA","title":"FDZ_Data_Cleaning","text":"variables strong data protection concern, already emptied directly IZA - data set form, provided via remote computing. achieved emptyTheseVariables() function. dat4 corresponds data set , vars describes variables emptied label_suffix automatically adds explanation variable label data emptied anonymization.","code":"extractMeta(dat4, vars = c(\"info\", \"ID_name\")) ##   varName      varLabel format display_width labeled value valLabel missings ## 2 ID_name           XXX     A8            NA      no    NA     <NA>     <NA> ## 3    info General notes     A8            NA     yes   -99     <NA>     miss ## 4    info General notes     A8            NA     yes   -98     <NA>     miss ## 5    info General notes     A8            NA     yes   -97     <NA>     miss dat4_empty <- c(\"info\",                 \"ID_name\") dat5 <- emptyTheseVariables(dat4,                             vars = dat4_empty,                             label_suffix = \" (Zur Anonymisierung geleert (FDZ))\") extractMeta(dat5, vars = c(\"info\", \"ID_name\")) ##   varName                                          varLabel format ## 2 ID_name           XXX  (Zur Anonymisierung geleert (FDZ))     A8 ## 3    info General notes  (Zur Anonymisierung geleert (FDZ))     A8 ## 4    info General notes  (Zur Anonymisierung geleert (FDZ))     A8 ## 5    info General notes  (Zur Anonymisierung geleert (FDZ))     A8 ##   display_width labeled value valLabel missings ## 2            NA      no    NA     <NA>     <NA> ## 3            NA     yes   -99     <NA>     miss ## 4            NA     yes   -98     <NA>     miss ## 5            NA     yes   -97     <NA>     miss"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"change-variable-and-value-labels","dir":"Articles","previous_headings":"","what":"Change variable and value labels","title":"FDZ_Data_Cleaning","text":"Variable value labels help us traceability comprehensibility data set. change variable value labels, functions ChangeVarLabels() ChangeValLabels() helpful. ChangeVarLabels() variable changed selected varName varLabel corresponding label assigned. ChangeValLabels() works way, except corresponding value selected, . Changing variable labels Changing value labels","code":"extractMeta(dat5, vars = c(\"school\")) ##    varName varLabel format display_width labeled value                 valLabel ## 30  school      XXX   F8.2            NA     yes   -99                  omitted ## 31  school      XXX   F8.2            NA     yes   -98           unclear answer ## 32  school      XXX   F8.2            NA     yes   -97                  unknown ## 33  school      XXX   F8.2            NA     yes     1              Hauptschule ## 34  school      XXX   F8.2            NA     yes     2               Realschule ## 35  school      XXX   F8.2            NA     yes     3 Integrierte Gesamtschule ## 36  school      XXX   F8.2            NA     yes     4                Gymnasium ##    missings ## 30     miss ## 31     miss ## 32     miss ## 33    valid ## 34    valid ## 35    valid ## 36    valid dat6 <- changeVarLabels(dat5, varName = \"school\", varLabel = \"School type\") extractMeta(dat6, vars = c(\"school\")) ##    varName    varLabel format display_width labeled value ## 30  school School type   F8.2            NA     yes   -99 ## 31  school School type   F8.2            NA     yes   -98 ## 32  school School type   F8.2            NA     yes   -97 ## 33  school School type   F8.2            NA     yes     1 ## 34  school School type   F8.2            NA     yes     2 ## 35  school School type   F8.2            NA     yes     3 ## 36  school School type   F8.2            NA     yes     4 ##                    valLabel missings ## 30                  omitted     miss ## 31           unclear answer     miss ## 32                  unknown     miss ## 33              Hauptschule    valid ## 34               Realschule    valid ## 35 Integrierte Gesamtschule    valid ## 36                Gymnasium    valid extractMeta(dat6, vars = c(\"books\")) ##    varName                varLabel format display_width labeled value ## 23   books Number of books at home  F10.0            NA     yes   -99 ## 24   books Number of books at home  F10.0            NA     yes     1 ## 25   books Number of books at home  F10.0            NA     yes     2 ## 26   books Number of books at home  F10.0            NA     yes     3 ## 27   books Number of books at home  F10.0            NA     yes     4 ## 28   books Number of books at home  F10.0            NA     yes     5 ## 29   books Number of books at home  F10.0            NA     yes     6 ##               valLabel missings ## 23             omitted     miss ## 24          0-10 books    valid ## 25         11-25 books    valid ## 26        26-100 books    valid ## 27       101-200 books    valid ## 28                        valid ## 29 more than 500 books    valid dat7 <- changeValLabels(dat6, varName = \"books\", value = 5, valLabel = \"201-500 books\") extractMeta(dat7, vars = c(\"books\")) ##    varName                varLabel format display_width labeled value ## 23   books Number of books at home  F10.0            NA     yes   -99 ## 24   books Number of books at home  F10.0            NA     yes     1 ## 25   books Number of books at home  F10.0            NA     yes     2 ## 26   books Number of books at home  F10.0            NA     yes     3 ## 27   books Number of books at home  F10.0            NA     yes     4 ## 28   books Number of books at home  F10.0            NA     yes     5 ## 29   books Number of books at home  F10.0            NA     yes     6 ##               valLabel missings ## 23             omitted     miss ## 24          0-10 books    valid ## 25         11-25 books    valid ## 26        26-100 books    valid ## 27       101-200 books    valid ## 28       201-500 books    valid ## 29 more than 500 books    valid"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"anonymization-form-grouping-variable","dir":"Articles","previous_headings":"","what":"Anonymization: Form grouping variable","title":"FDZ_Data_Cleaning","text":"anonymization reasons, partially form grouping variables items case number <6. , create new _FDZ variable âcloningâ variable want group cloneVariable(). varName enter original variable name, new_varName enter variable name including appendix â_FDZâ. variable label automatically adjusted option label_suffix. recodeGADS() old values (oldValues) replaced new ones (newValues). help changeValLabels() value labels new groupings changed. can also perform grouping multiple variables using loop. give variables temporary name consisting variable name suffix â_FDZâ. varname represents individual variable, summarized gr_var. individual steps (cloneVariable(), recodeGADS(),changeValLabels()) therefore performed variables turn. Now created two groups. first group includes students grades 1-4, means passed. group, students grades 5 6, means passed. groups created three subjects Math, German English .","code":"extractMeta(dat7, vars = c(\"age\")) ##   varName varLabel format display_width labeled value valLabel missings ## 9     age      Age  F10.0            NA      no    NA     <NA>     <NA> dat8 <- cloneVariable(dat7, varName = \"age\", new_varName = \"age_FDZ\", label_suffix = \" (Zur Anonymisierung aggregiert (FDZ))\")  dat8 <- recodeGADS(dat8, varName = \"age_FDZ\", oldValues = c(13, 14, 15, 17),                   newValues = c(13, 13, 15, 15)) dat8 <- changeValLabels(dat8, varName = \"age_FDZ\", value = c(13, 15), valLabel = c(\"13-14\", \"15-17\")) extractMeta(dat8, vars = c(\"age_FDZ\")) ##    varName                                   varLabel format display_width ## 40 age_FDZ Age  (Zur Anonymisierung aggregiert (FDZ))  F10.0            NA ## 41 age_FDZ Age  (Zur Anonymisierung aggregiert (FDZ))  F10.0            NA ##    labeled value valLabel missings ## 40     yes    13    13-14    valid ## 41     yes    15    15-17    valid extractMeta(dat8, vars = c(\"grade_math\")) ##       varName          varLabel format display_width labeled value valLabel ## 37 grade_math Grade mathematics   F8.2            NA      no    NA     <NA> ##    missings ## 37     <NA> dat9 <- dat8 gr_var <- c(\"grade_math\", \"grade_germ\", \"grade_eng\") for (varname in gr_var) {   tempnewname <- paste0(varname, \"_FDZ\")   dat9 <- cloneVariable(dat9, varName = varname,                         new_varName = tempnewname, label_suffix = \" (Zur Anonymisierung aggregiert (FDZ))\")   dat9 <- recodeGADS(dat9, varName = tempnewname,                       oldValues = c(1:6),                       newValues = c(rep(1,4),rep(2,2)))   dat9 <- changeValLabels(dat9, varName = tempnewname, value = c(1, 2),                            valLabel = c(\"passed\", \"not passed\")) } extractMeta(dat9, vars = c(\"grade_math_FDZ\")) ##           varName                                                 varLabel ## 42 grade_math_FDZ Grade mathematics  (Zur Anonymisierung aggregiert (FDZ)) ## 43 grade_math_FDZ Grade mathematics  (Zur Anonymisierung aggregiert (FDZ)) ##    format display_width labeled value   valLabel missings ## 42   F8.2            NA     yes     1     passed    valid ## 43   F8.2            NA     yes     2 not passed    valid"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"creating-the-version-variable","dir":"Articles","previous_headings":"","what":"Creating the version variable","title":"FDZ_Data_Cleaning","text":"indicate state data set, data set provided version variable. created using createVariable() placed beginning record relovateVariable() consistent, visible place.","code":"version_name <- \"Version_v1_2023_07\" dat10 <- createVariable(dat9, varName = version_name) dat10 <- relocateVariable(dat10, var = version_name, after = NULL)"},{"path":"https://beckerbenj.github.io/eatFDZ/articles/FDZ_Data_Cleaning.html","id":"change-variable-order","dir":"Articles","previous_headings":"","what":"Change variable order","title":"FDZ_Data_Cleaning","text":"rearrange variables data set, function orderLike() helps, variables listed new order. sort individual variables, newly created grouping variables behind emptied original variable, relocateVariable() can used.","code":"dat11 <- orderLike(dat10, newOrder = c(\"Version_v1_2023_07\", \"ID\", \"ID_name\", \"info\", \"home\", \"birth\", \"age\", \"age_FDZ\", \"sex\", \"siblings\", \"books\", \"school\", \"subjfav\", \"grade_math\", \"grade_math_FDZ\", \"grade_germ\", \"grade_germ_FDZ\", \"grade_eng\", \"grade_eng_FDZ\")) dat11 <- relocateVariable(dat11, var = \"age_FDZ\", after = \"age\")"},{"path":"https://beckerbenj.github.io/eatFDZ/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benjamin Becker. Author, maintainer. Annegret Rucker. Author, contributor. Sebastian Weirich. Author, contributor. Claudia Neuendorf. Author, contributor.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Becker B, Rucker , Weirich S, Neuendorf C (2023). eatFDZ: Data checking validation. R package version 0.6.0, https://beckerbenj.github.io/eatFDZ/.","code":"@Manual{,   title = {eatFDZ: Data checking and validation},   author = {Benjamin Becker and Annegret Rucker and Sebastian Weirich and Claudia Neuendorf},   year = {2023},   note = {R package version 0.6.0},   url = {https://beckerbenj.github.io/eatFDZ/}, }"},{"path":[]},{"path":"https://beckerbenj.github.io/eatFDZ/index.html","id":"workflow","dir":"","previous_headings":"","what":"Workflow","title":"Data checking and validation","text":"R package automates workflows Forschungsdatenzentrum (FDZ) IQB.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data checking and validation","text":"","code":"# Install eatFDZ from GitHub via remotes::install_github(\"beckerbenj/eatFDZ\")  # Install eatAnalysis (for writing Excel files) from GitHub via remotes::install_github(\"beckerbenj/eatAnalysis\")"},{"path":"https://beckerbenj.github.io/eatFDZ/index.html","id":"codebook-checks","dir":"","previous_headings":"","what":"Codebook checks","title":"Data checking and validation","text":"","code":"library(eatFDZ) ### Check if all variables in the data set are mentioned in the codebook out <- check_docu(sav_path = \"example_data.sav\",             pdf_path = \"example_codebook.pdf\", )  # write to Excel eatAnalysis::write_xlsx(out, filePath = \"codebook_checks.xlsx\", row.names = FALSE)"},{"path":"https://beckerbenj.github.io/eatFDZ/index.html","id":"data-cleaning-and-anonymization","dir":"","previous_headings":"","what":"Data cleaning and anonymization","title":"Data checking and validation","text":"","code":"syntax <- data_clean(fileName = sav_path,              saveFolder = tempdir(), nameListe = \"liste2.csv\",              nameSyntax = \"syntax2.txt\", exclude=exclude)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Run all data checks. â check_all","title":"Run all data checks. â check_all","text":"Run data checks.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run all data checks. â check_all","text":"","code":"check_all(   sav_path,   pdf_path = NULL,   encoding = NULL,   missingRange = -50:-99,   missingRegex = \"missing|omitted|not reached|nicht beantwortet|ausgelassen\",   idVar = NULL,   sdcVars = NULL )"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run all data checks. â check_all","text":"sav_path Path SPSS file pdf_path Path .pdf file encoding Optional: character encoding used reading .sav file. default, NULL, uses encoding specified file, sometimes value incorrect useful able override . missingRange Numerical range missing tags. missingRegex Regular expression value labels missing tags. idVar Unique identifier variable data set. sdcVars Variable names variables potential statistical disclosure control issues.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run all data checks. â check_all","text":"data.frame.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run all data checks. â check_all","text":"functions calls check_file_name, check_var_names, check_meta_encoding, check_id, check_var_labels, checkMissingValLabels, check_missing_range, check_missing_regex, sdc_check, check_docu.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu.html","id":null,"dir":"Reference","previous_headings":"","what":"Check documentation of data sets. â check_docu","title":"Check documentation of data sets. â check_docu","text":"Check variables one multiple data sets saved sav included pdf documentation.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check documentation of data sets. â check_docu","text":"","code":"check_docu(   sav_path,   pdf_path,   post_words = 2,   case_sensitive = FALSE,   encoding = NULL )"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check documentation of data sets. â check_docu","text":"sav_path Character vector paths .sav files. pdf_path Character vector paths .pdf files. post_words Number words variable names extracted PDF. case_sensitive TRUE, upper lower case differentiated variable name matching. FALSE, case ignored. encoding Optional: character encoding used reading .sav file. default, NULL, uses encoding specified file, sometimes value incorrect useful able override .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check documentation of data sets. â check_docu","text":"data.frame variable names, count mentions pdf (count), words variable names (post) name data set variable occurs (data_set).","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check documentation of data sets. â check_docu","text":"common requirement data documentation complete codebook. check_docu function can used check, whether variables (column names) one multiple sav data sets mentioned documentation, provided pdf files. Multiple pdf files treated one single pdf file. multiple data sets output sorted data set data_set column indicates data set variable name belongs. Error messages PDF error: Invalid Font Weight can savely ignored. easier reading output, output can written excel file, example using write.xlsx function openxlsx package write_xlsx function eatAnalysis package.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check documentation of data sets. â check_docu","text":"","code":"# File pathes sav_path1 <- system.file(\"extdata\", \"helper_spss_p1.sav\", package = \"eatFDZ\") sav_path2 <- system.file(\"extdata\", \"helper_spss_p2.sav\", package = \"eatFDZ\") pdf_path1 <- system.file(\"extdata\", \"helper_codebook_p1.pdf\", package = \"eatFDZ\") pdf_path2 <- system.file(\"extdata\", \"helper_codebook_p2.pdf\", package = \"eatFDZ\")  check_df <- check_docu(sav_path = c(sav_path1, sav_path2),                        pdf_path = c(pdf_path1, pdf_path2), post_words = 2)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Check documentation of data sets. â check_docu_excel","title":"Check documentation of data sets. â check_docu_excel","text":"Check variables one multiple data sets saved sav included excel documentation.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check documentation of data sets. â check_docu_excel","text":"","code":"check_docu_excel(sav_path, excel_path, case_sensitive = FALSE, encoding = NULL)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check documentation of data sets. â check_docu_excel","text":"sav_path Character vector paths .sav files. excel_path Character vector paths .xlsx files. case_sensitive TRUE, upper lower case differentiated variable name matching. FALSE, case ignored. encoding Optional: character encoding used reading .sav file. default, NULL, uses encoding specified file, sometimes value incorrect useful able override .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check documentation of data sets. â check_docu_excel","text":"data.frame variable names, count mentions pdf (count), name data set variable occurs (data_set).","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_excel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check documentation of data sets. â check_docu_excel","text":"common requirement data documentation complete codebook. check_docu_excel function can used check, whether variables (column names) one multiple sav data sets mentioned documentation, provided excel files. Multiple pdf files treated one single pdf file. multiple data sets output sorted data set data_set column indicates data set variable name belongs. easier reading output, output can written excel file, example using write.xlsx function openxlsx package write_xlsx function eatAnalysis package.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check documentation of data sets. â check_docu_excel","text":"","code":"# File pathes sav_path1 <- system.file(\"extdata\", \"helper_spss_p1.sav\", package = \"eatFDZ\") sav_path2 <- system.file(\"extdata\", \"helper_spss_p2.sav\", package = \"eatFDZ\") excel_path1 <- system.file(\"extdata\", \"helper_codebook_p1.xlsx\", package = \"eatFDZ\")  check_df <- check_docu_excel(sav_path = c(sav_path1, sav_path2),                        excel_path = c(excel_path1))"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_mez.html","id":null,"dir":"Reference","previous_headings":"","what":"Check documentation of data sets. â check_docu_mez","title":"Check documentation of data sets. â check_docu_mez","text":"specific version check_docu written MEZ study. variable name can found documentation, variable name split first numeral * added stem.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_mez.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check documentation of data sets. â check_docu_mez","text":"","code":"check_docu_mez(   sav_path,   pdf_path,   post_words = 2,   case_sensitive = FALSE,   encoding = NULL )"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_mez.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check documentation of data sets. â check_docu_mez","text":"sav_path Character vector paths .sav files. pdf_path Character vector paths .pdf files. post_words Number words variable names extracted PDF. case_sensitive TRUE, upper lower case differentiated variable name matching. FALSE, case ignored. encoding Optional: character encoding used reading .sav file. default, NULL, uses encoding specified file, sometimes value incorrect useful able override .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_docu_mez.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check documentation of data sets. â check_docu_mez","text":"data.frame variable names, count mentions pdf (count), words variable names (post) name data set variable occurs (data_set).","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_file_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Check file name. â check_file_name","title":"Check file name. â check_file_name","text":"Check validate file name.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_file_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check file name. â check_file_name","text":"","code":"check_file_name(path)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_file_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check file name. â check_file_name","text":"path File path.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_file_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check file name. â check_file_name","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_file_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check file name. â check_file_name","text":"Checks variable names include special signs Umlaute spaces","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_file_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check file name. â check_file_name","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Check an identifier variable. â check_id","title":"Check an identifier variable. â check_id","text":"Check uniqueness non-missingness variable GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check an identifier variable. â check_id","text":"","code":"check_id(GADSdat, idVar = NULL)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check an identifier variable. â check_id","text":"GADSdat GADSdat object. idVar Name identifier variable GADSdat object.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check an identifier variable. â check_id","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check an identifier variable. â check_id","text":"Checks include identifier variable unique (.e., duplicates)? missing values identifier variable?","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check an identifier variable. â check_id","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_meta_encoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Check meta data encoding. â check_meta_encoding","title":"Check meta data encoding. â check_meta_encoding","text":"Check occurence specials signs meta data GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_meta_encoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check meta data encoding. â check_meta_encoding","text":"","code":"check_meta_encoding(GADSdat)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_meta_encoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check meta data encoding. â check_meta_encoding","text":"GADSdat GADSdat object.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_meta_encoding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check meta data encoding. â check_meta_encoding","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_meta_encoding.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check meta data encoding. â check_meta_encoding","text":"Checks meta data include special signs Umlaute","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_meta_encoding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check meta data encoding. â check_meta_encoding","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Check missing range. â check_missing_range","title":"Check missing range. â check_missing_range","text":"Check labeled values fall range missing values GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check missing range. â check_missing_range","text":"","code":"check_missing_range(GADSdat, missingRange = -50:-99)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check missing range. â check_missing_range","text":"GADSdat GADSdat object. missingRange Values declared missings.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check missing range. â check_missing_range","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_range.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check missing range. â check_missing_range","text":"Checks include ...","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check missing range. â check_missing_range","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Check missing range. â check_missing_regex","title":"Check missing range. â check_missing_regex","text":"Check labeled values fall range missing values GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check missing range. â check_missing_regex","text":"","code":"check_missing_regex(   GADSdat,   missingRegex = \"missing|omitted|not reached|nicht beantwortet|ausgelassen\" )"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check missing range. â check_missing_regex","text":"GADSdat GADSdat object. missingRegex Value labels declared missings.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check missing range. â check_missing_regex","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_regex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check missing range. â check_missing_regex","text":"Checks include ...","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_missing_regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check missing range. â check_missing_regex","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_sdc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Statistical Disclosure Control Report. â check_sdc","title":"Create a Statistical Disclosure Control Report. â check_sdc","text":"Create statistical disclosure control report: variables categories low absolute frequencies, might lead statistical data disclosure issues?","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_sdc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Statistical Disclosure Control Report. â check_sdc","text":"","code":"check_sdc(GADSdat, vars = eatGADS::namesGADS(GADSdat), boundary = 5)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_sdc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Statistical Disclosure Control Report. â check_sdc","text":"GADSdat GADSdat object. vars Character vector variable names. variables checked? boundary Integer number: categories less equal boundary observations flagged","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_sdc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Statistical Disclosure Control Report. â check_sdc","text":"data.frame.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_sdc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Statistical Disclosure Control Report. â check_sdc","text":"Individual participants studies educational large-scale assessments usually must remain non-identifiable individual level. function checks specified variables GADSdat object low frequency categories might lead statistical disclosure control issues. Currently, uni-variate check implemented.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_sdc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Statistical Disclosure Control Report. â check_sdc","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Check existence of variable labels. â check_var_labels","title":"Check existence of variable labels. â check_var_labels","text":"Check existence variable labels variables GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check existence of variable labels. â check_var_labels","text":"","code":"check_var_labels(GADSdat)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check existence of variable labels. â check_var_labels","text":"GADSdat GADSdat object.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check existence of variable labels. â check_var_labels","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check existence of variable labels. â check_var_labels","text":"Checks include variable labels assigned?","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check existence of variable labels. â check_var_labels","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Check variable names. â check_var_names","title":"Check variable names. â check_var_names","text":"Check variable names variables GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check variable names. â check_var_names","text":"","code":"check_var_names(GADSdat)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check variable names. â check_var_names","text":"GADSdat GADSdat object.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check variable names. â check_var_names","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check variable names. â check_var_names","text":"Checks variable names include special signs Umlaute column names \".\" .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check variable names. â check_var_names","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for lengthy variable names. â check_var_names_length","title":"Check for lengthy variable names. â check_var_names_length","text":"Check lengthy variable names variables GADSdat.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for lengthy variable names. â check_var_names_length","text":"","code":"check_var_names_length(GADSdat, boundary = 30)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for lengthy variable names. â check_var_names_length","text":"GADSdat GADSdat object. boundary Numeric vector lenght 1. Boundary: Number characters variables names allowed .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for lengthy variable names. â check_var_names_length","text":"Returns test report.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/check_var_names_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for lengthy variable names. â check_var_names_length","text":"","code":"# tbd"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/data_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Data clean. â data_clean","title":"Data clean. â data_clean","text":"function deprecated, please use sdc_check instead.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/data_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data clean. â data_clean","text":"","code":"data_clean()"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/english_words.html","id":null,"dir":"Reference","previous_headings":"","what":"English Language Corpus â english_words","title":"English Language Corpus â english_words","text":"English language corpus downloaded https://github.com/dwyl/english-words.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/english_words.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"English Language Corpus â english_words","text":"","code":"english_words"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/english_words.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"English Language Corpus â english_words","text":"character vector 459866 entries.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/english_words.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"English Language Corpus â english_words","text":"https://github.com/dwyl/english-words english_words","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/german_words.html","id":null,"dir":"Reference","previous_headings":"","what":"German Language Corpus â german_words","title":"German Language Corpus â german_words","text":"German language corpus downloaded https://github.com/davidak/wortliste.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/german_words.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"German Language Corpus â german_words","text":"","code":"german_words"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/german_words.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"German Language Corpus â german_words","text":"character vector 239649 entries.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/german_words.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"German Language Corpus â german_words","text":"https://github.com/davidak/wortliste german_words","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/reverse_check_docu.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse check documentation of data sets. â reverse_check_docu","title":"Reverse check documentation of data sets. â reverse_check_docu","text":"function extracts words pdf file discards words variables data set words white listed. Based list words returned, might listed variables documentation data set.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/reverse_check_docu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse check documentation of data sets. â reverse_check_docu","text":"","code":"reverse_check_docu(   white_list = c(english_words, german_words),   pdf_path,   sav_path,   encoding = NULL )"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/reverse_check_docu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse check documentation of data sets. â reverse_check_docu","text":"white_list character vector containing words flagged. Defaults combination German English corpus. pdf_path Character vector paths .pdf files. sav_path Character vector paths .sav files. encoding character encoding used file. default, NULL, use encoding specified file, sometimes value incorrect useful able override .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/reverse_check_docu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse check documentation of data sets. â reverse_check_docu","text":"data.frame columns suspicious_words, missing_documentation comment.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/reverse_check_docu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse check documentation of data sets. â reverse_check_docu","text":"","code":"# File pathes sav_path1 <- system.file(\"extdata\", \"helper_spss_p1.sav\", package = \"eatFDZ\") sav_path2 <- system.file(\"extdata\", \"helper_spss_p2.sav\", package = \"eatFDZ\") pdf_path1 <- system.file(\"extdata\", \"helper_codebook_p1.pdf\", package = \"eatFDZ\") pdf_path2 <- system.file(\"extdata\", \"helper_codebook_p2.pdf\", package = \"eatFDZ\") pdf_path3 <- system.file(\"extdata\", \"helper_codebook_p3.pdf\", package = \"eatFDZ\")  check_df <- reverse_check_docu(sav_path = c(sav_path1, sav_path2),                        pdf_path = c(pdf_path1, pdf_path2, pdf_path3))"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/sdc_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Statistical Disclosure Control Report. â sdc_check","title":"Create a Statistical Disclosure Control Report. â sdc_check","text":"Create statistical disclosure control report: variables categories low absolute frequencies, might lead statistical data disclosure issues?","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/sdc_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Statistical Disclosure Control Report. â sdc_check","text":"","code":"sdc_check(fileName, boundary = 5, exclude = NULL, encoding = NULL)"},{"path":"https://beckerbenj.github.io/eatFDZ/reference/sdc_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Statistical Disclosure Control Report. â sdc_check","text":"fileName Character string SPSS file boundary Integer number: categories less equal boundary observations flagged exclude Optional: character vector variable names excluded report encoding Optional: character encoding used reading .sav file. default, NULL, uses encoding specified file, sometimes value incorrect useful able override .","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/sdc_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Statistical Disclosure Control Report. â sdc_check","text":"data.frame.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/sdc_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Statistical Disclosure Control Report. â sdc_check","text":"Individual participants studies educational large-scale assessments usually must remain non-identifiable individual level. function checks variables GADSdat object low frequency categories might lead statistical disclosure control issues. Currently, uni-variate check implemented.","code":""},{"path":"https://beckerbenj.github.io/eatFDZ/reference/sdc_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Statistical Disclosure Control Report. â sdc_check","text":"","code":"sav_path <- system.file(\"extdata\", \"LV_2011_CF.sav\", package = \"eatFDZ\")  ## don't report low frequencies for unique id variables exclude<- c(\"idstud_FDZ\", \"idsch_FDZ\")  ## sdc_report <- sdc_check(fileName = sav_path, exclude=exclude)"}]
