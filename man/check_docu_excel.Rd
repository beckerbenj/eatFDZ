% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_docu_excel.R
\name{check_docu_excel}
\alias{check_docu_excel}
\title{Check documentation of data sets.}
\usage{
check_docu_excel(sav_path, excel_path, case_sensitive = FALSE, encoding = NULL)
}
\arguments{
\item{sav_path}{Character vector with paths to the \code{.sav} files.}

\item{excel_path}{Character vector with paths to the \code{.xlsx} files.}

\item{case_sensitive}{If \code{TRUE}, upper and lower case are differentiated for variable name matching. If \code{FALSE}, case is ignored.}

\item{encoding}{Optional: The character encoding used for reading the \code{.sav} file. The default, \code{NULL}, uses the encoding specified in the file, but sometimes this value is incorrect and it is useful to be able to override it.}
}
\value{
A \code{data.frame} with the variable names, count of mentions in the \code{pdf} (\code{count}), and the name of the data set in which the variable occurs (\code{data_set}).
}
\description{
Check if all variables of one or multiple data sets saved as \code{sav} are included in the \code{excel} documentation.
}
\details{
A common requirement for data documentation is a complete codebook. The \code{check_docu_excel} function can be used to check, whether all variables (column names) in one or multiple \code{sav} data sets are mentioned in the documentation, provided as \code{excel} files. Multiple \code{pdf} files are treated as one single \code{pdf} file. For multiple data sets the output is sorted by data set and the \code{data_set} column indicates to which data set the variable name belongs.

For easier reading of the output, the output can be written to an \code{excel} file, for example using the \code{write.xlsx} function from the \code{openxlsx} package or the \code{write_xlsx} function from the \code{eatAnalysis} package.
}
\examples{
# File pathes
sav_path1 <- system.file("extdata", "helper_spss_p1.sav", package = "eatFDZ")
sav_path2 <- system.file("extdata", "helper_spss_p2.sav", package = "eatFDZ")
excel_path1 <- system.file("extdata", "helper_codebook_p1.xlsx", package = "eatFDZ")

check_df <- check_docu_excel(sav_path = c(sav_path1, sav_path2),
                       excel_path = c(excel_path1))

}
